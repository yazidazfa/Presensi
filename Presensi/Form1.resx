<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>