<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UqVeh4uMJpnOdv/Z
</value>
  </data>
</root>